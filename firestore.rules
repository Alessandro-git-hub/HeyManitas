rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Jobs collection - workers can manage their own jobs, system can create jobs
    match /jobs/{jobId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && (
        request.auth.uid == request.resource.data.userId ||
        request.resource.data.userId != null
      );
    }

    // Bookings collection - customers and workers can access, payments can update
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null && (
        request.auth.token.email == resource.data.customerEmail ||
        request.auth.uid == resource.data.professionalId ||
        (request.auth.token.email == resource.data.customerEmail &&
         request.resource.data.keys().hasAny(['paymentStatus', 'amountPaid', 'paidAt', 'status']))
      );
      allow create: if request.auth != null;
    }

    // Customer calendar - customers can only access their own calendar
    match /customerCalendar/{calendarId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == resource.data.customerId ||
        request.auth.token.email == resource.data.customerEmail
      );
      allow create: if request.auth != null && (
        request.auth.uid == request.resource.data.customerId ||
        request.auth.token.email == request.resource.data.customerEmail
      );
    }

    // Services collection - workers can manage their own services
    match /services/{serviceId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Professionals collection - read access for browsing, write access for own profile
    match /professionals/{professionalId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == professionalId;
    }

    // Clients collection - workers can only access their own clients
    match /clients/{clientId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.workerId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.workerId;
    }
  }
}
